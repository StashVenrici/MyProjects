#pragma once

struct Element
{
	char data;				//Данные
	Element * Next;			//Адрес следующего элемента списка
};
//-----------------------------------------------------------------
//Односвязный список
class List
{
	Element * Head;			//Адрес головного элемента списка
	int count;				//Количество элементов списка
public:
	List();					//Конструктор
	List(const List &L);	//конструктор копий
	~List();				//Деструктор
	void AddBegin(char d);		//добавление элемента в начало списка
	void AddEnd(char d);	//Добавление элемента в список(в конец)
	void DelBegin();		//Удаление элемента списка(головной элемент)
	void DelAll();			//Удаление всего списка
	void Print();			//Вывод содержимого списка(с головы)
	int GetCount();//Получение количества элементов,//находящихся в списке
	int FindElement(const char d);
	void FindDel(const char d);

	// Добавление элемента(второй параметр) после элемента со значением первого параметра
	void AddAfter(char d, char dd); 

	List& operator=(List &L);


	friend void f1(List L);
};


