#include<iostream>
#include<conio.h>
#include "MyArrow.h"
#include"List.h"
#include<time.h>

using namespace std;

void foo(MyArrow A) {
	A.Show();
}

ostream & operator<<(ostream & os, const MyArrow & A)
{
	for (int i = 0; i < A.SIZE; i++) os << A.arr[i] << " ";
	return os;
}

istream & operator>>(istream & is, const MyArrow & A)
{
	cout << "Enter numbers:\n";
	for (int i = 0; i < A.SIZE; i++)
	{
		is >> A.arr[i];
	}
	return is;
}

MyArrow CreateMyArrow(MyArrow& A)
{
	MyArrow TMP(A);
	return TMP;
}

int main(){
	/*HW3 Задание 1. Напишите класс MyArray с динамическим выделением памяти для
		хранения значений целого типа. Реализуйте все необходимые методы: 
		
		конструктор по умолчанию, 
		конструктор с параметрами, 
		конструктор копирования, 
		деструктор.
		
		Перегрузите операции: [], =, <<. 
		Напишите метод, возвращающий среднее значение
		массива. 
		
		Обеспечьте возможность подсчета количества созданных объектов класса.*/
	
//	srand(time(NULL));


	//MyArrow A;
	//A.Show();
	//MyArrow B(5);
	//B.Show();
	//cout << "count: "<< MyArrow::count << endl;	//подсчет объектов
	//foo(B);	//проверка конструктора копий(через дружественную функцию)
	//cout << "==============================";
	//A = B;	//работа оператора =
	//A.Show();
	//cout << "A[2] = " << A[2] <<endl; //работает оператор []
	//cout << "==============================\n";
	//cout << A;	//перегрузка оператора ostream <<
	//cout << "==============================\n";
	//cout << A.calcAVG();	//среднее значение массива




	/*HW4 Задание 2. Добавить в уже существующий класс MyArray конструктор переноса,
		оператор присваивания переноса.*/

	//MyArrow A(5);
	//cout << "A: ";
	//A.Show();
	//MyArrow B(A);	//работает конструктор переноса, строка 14 в MyArrow.h
	//cout << "B: ";
	//B.Show();
	//cout << "=====================================\n";
	//MyArrow C, D(7);
	//C = CreateMyArrow(A);	//после создания объекта срабатывает оператор присваивания переноса, строка 17 в MyArrow.h
	//cout << "C(A)";
	//C.Show();
	//A = D;		//а здесь срабатывает обычный оператор присваивания
	//cout << "A=D: ";
	//A.Show();




	/*Задание 3. Реализуйте класс MyArray, добавив перегрузки для :
		- ввода данных(перегрузка >> )
		- ситуаций вида : объект_класса + Число
		- ситуации вида : Число + объект_класса
		- объект_класса = объект_класса + объект_класса.*/
	

	//MyArrow A(3);
	//cin >> A;	//перегрузка >>
	//cout << "A: ";
	//A.Show();
	//cout << "=====================================\n";
	//MyArrow X,Y,SUM;
	//X = A + 10;	//перегрузка объект_класса + Число
	//cout << "X = A+10:\t";	
	//X.Show();
	//cout << "=====================================\n";
	//Y = 20 + X;	//перегрузка Число + объект_класса 
	//cout << "20+X:\t";
	//Y.Show();
	//cout << "=====================================\n";
	//SUM = X + Y;
	//cout << "X+Y:\t" <<SUM;




	/*Задание 4. Добавить в уже существующий класс List(односвязный список) методы:
	-поиск элемента списка по значению
		- добавление элемента в начало списка
		- добавление элемента в конец списка
		- удаление элемента по значению
		- конструктор копий
		- оператор присваивания
		- оператор присваивания переноса
		- оператор сложения двух списков.*/





	_getch();
	return 0;
}